name: CI
on:
  push:
    branches:
      - master

jobs:
  build:
    name: Integration Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layer
        uses: actions/cache@v2
        with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: sampleapp
          push: true
          tags: |
            public.ecr.aws/u0d6r4y4/aws-otel-go-test-gorilla:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Run test containers
        run: docker-compose up --abort-on-container-exit
        working-directory: .github/collector
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          LISTEN_ADDRESS: 0.0.0.0:8080
          APP_IMAGE: public.ecr.aws/u0d6r4y4/aws-otel-go-test-gorilla:${{ github.sha }}
          VALIDATOR_COMMAND: -c go-otel-trace-validation.yml --endpoint http://app:8080 -t ${{ github.run_id }}-${{ github.run_number }}
